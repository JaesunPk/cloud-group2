import"./common-B1Ozf9Fy.js";import*as n from"https://unpkg.com/three@0.150.1/build/three.module.js";import{OrbitControls as R}from"https://unpkg.com/three@0.150.1/examples/jsm/controls/OrbitControls.js";import q from"https://unpkg.com/lil-gui@0.17.1/dist/lil-gui.esm.min.js";new n.TextureLoader;const C=new q;C.hide();const f=document.querySelector("canvas.webgl"),M=new n.Scene,e={},I={};e.count=5e4;e.size=.01;e.randomnessPower=20;e.scale=5;e.innerColor="#00ccff";e.outerColor="#c800ff";let h=null,g=null,p=null;const d=()=>{p!=null&&(h.dispose(),g.dispose(),M.remove(p)),h=new n.BufferGeometry;const t=new Float32Array(e.count*3),a=new Float32Array(e.count*3),l=Math.PI*2/e.count,z=new n.Color(e.innerColor),F=new n.Color(e.outerColor);for(let w=0;w<e.count;w++){const i=w*3,r=l*w,y=Math.pow(Math.random(),e.randomnessPower)*(Math.random()<.5?1:-1),A=Math.pow(Math.random(),e.randomnessPower)*(Math.random()<.5?1:-1),b=Math.pow(Math.random(),e.randomnessPower)*(Math.random()<.5?1:-1);t[i]=e.scale*(Math.sqrt(2)*Math.cos(r))/(Math.sin(r)*Math.sin(r)+1)+b,t[i+1]=e.scale*(Math.sqrt(2)*Math.cos(r)*Math.sin(r))/(Math.sin(r)*Math.sin(r)+1)+y,t[i+2]=e.scale*A;const v=Math.sqrt(t[i]**2+t[i+1]**2+t[i+2]**2)/e.scale,u=z.clone();u.lerp(F,v),a[i]=u.r,a[i+1]=u.g,a[i+2]=u.b}h.setAttribute("position",new n.BufferAttribute(t,3)),h.setAttribute("color",new n.BufferAttribute(a,3)),g=new n.PointsMaterial({sizeAttenuation:!0,blending:n.AdditiveBlending,size:e.size,depthTest:!0,vertexColors:!0,transparent:!0,opacity:1}),p=new n.Points(h,g),M.add(p)};d();const c=C.addFolder("Infinity");c.add(e,"count").min(100).max(1e5).step(1).onFinishChange(d);c.add(e,"size").min(.01).max(1).step(.001).onFinishChange(d);c.add(e,"randomnessPower").min(1).max(100).step(.001).onFinishChange(d);c.add(e,"scale").min(1).max(10).step(.001).onFinishChange(d);c.addColor(e,"innerColor").onFinishChange(d);c.addColor(e,"outerColor").onFinishChange(d);c.add(I,"idleAnimation");const o={width:window.innerWidth,height:window.innerHeight};window.addEventListener("resize",()=>{o.width=window.innerWidth,o.height=window.innerHeight,s.aspect=o.width/o.height,s.updateProjectionMatrix(),m.setSize(o.width,o.height),m.setPixelRatio(Math.min(window.devicePixelRatio,2))});const s=new n.PerspectiveCamera(75,o.width/o.height,.1,100);s.position.x=0;s.position.y=0;s.position.z=0;M.add(s);const P=new R(s,f);P.enableDamping=!0;const m=new n.WebGLRenderer({canvas:f});m.setSize(o.width,o.height);m.setPixelRatio(Math.min(window.devicePixelRatio,2));const S=new n.Clock,x=()=>{const t=S.getElapsedTime(),a=20;let l=new n.Vector3(a*Math.sin(t*.25),0,a*Math.cos(t));s.position.set(l.x,l.y,l.z),P.update(),m.render(M,s),window.requestAnimationFrame(x)};x();
//# sourceMappingURL=main-XJ9qIsJu.js.map
